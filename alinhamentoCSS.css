.vertical-align {
    position: relative;
    top: 50%;
    transform: translateY(-50%); /* Adicionar os prefixos dos navegadores */
}

.vertical-align {
    display: block;
}

.vertical-align > div {
    display: block;
    position: relative;
    margin-top: inherit;
    clear: ~'expression(style.marginTop = "" + (offsetHeight < parentNode.offsetHeight ? parseInt((parentNode.offsetHeight - offsetHeight) / 2) + "px" : "0"), style.clear = "none", 0)';
}

.vertical-align {
    position: relative;
}

.vertical-align > div {
    position: absolute;
    top: 50%;
}

.vertical-align > div > div {
    position: relative;
    top: -50%;
}



.wrapper {
  height: 100%;
  min-height: 100%;
  display: -webkit-flex;
  display: flex;
  -webkit-align-items: center;
  align-items: center;
  -webkit-justify-content: center;
  justify-content: center;
}
/*No .wrapper definimos a propriedade display: flex; que avisa o navegador que os elementos filhos diretos do .wrapper dever√£o agir como flexbox. A propriedade align-items centraliza os elementos flex na vertical. A propriedade justify-content centraliza os elementos na horizontal.

Perceba que usei o prefixo -webkit- por causa do Safari.*/
.wrapper div {
  padding: 40px;
  border: 1px solid rgba(0, 0, 0, .3)
}